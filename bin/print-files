#!/bin/bash -e
#
# Use this script to dump a bunch of files into stdout, pipe to pbcopy, pass to an LLM, and raise a bajillion vc dollars.

if [ $# -eq 0 ]; then
  echo "Usage: $0 <directory or file> [directory or file ...]"
  exit 1
fi

process_files() {
  for item in "$@"; do
    if [ -f "$item" ]; then
      echo "=== $item ==="
      cat "$item"
      echo
    elif [ -d "$item" ]; then
      find "$item" -type f \
        ! -path "*/node_modules/*" \
        ! -path "*/dist/*" \
        ! -path "*/build/*" \
        ! -path "*/.next/*" \
        ! -path "*/.turbo/*" \
        ! -path "*/.*_cache/*" \
        ! -path "*/__pycache__/*" \
        ! -path "*/.venv/*" \
        ! -path "*/venv/*" \
        ! -path "*/env/*" \
        ! -path "*/.bundle/*" \
        ! -path "*/.yardoc/*" \
        ! -path "*/log/*" \
        ! -path "*/tmp/*" \
        ! -name "*.pyc" \
        ! -name "*.pyo" \
        ! -name "*.rbc" \
        ! -name "*.o" \
        ! -name "*.obj" \
        ! -name "*.so" \
        ! -name "*.dll" \
        ! -name "*.tsbuildinfo" \
        ! -name "*.log" \
        ! -name "*.sqlite3" \
        ! -name "Gemfile.lock" \
        ! -name "go.sum" \
        ! -name "*.lua.un*" \
        ! -name "*.swp" \
        ! -name "*/htmlcov" \
        ! -name "*/coverage" \
        | sort | while read -r file; do
          echo "=== $file ==="
          cat "$file"
          echo
        done
    else
      echo "Error: '$item' is not a valid file or directory" >&2
    fi
  done
}

process_files "$@"
