#!/bin/bash -e
#
# Use this script to dump a bunch of files into stdout, pipe to pbcopy, pass to an LLM, and raise a bajillion vc dollars.

# Check if directory name is provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 <directory>"
    exit 1
fi

directory="$1"

# Check if directory exists
if [ ! -d "$directory" ]; then
    echo "Error: Directory '$directory' does not exist"
    exit 1
fi

# Function to process files recursively, ignoring common files/folders for TS, Python, Ruby
process_files() {
    local dir="$1"

    find "$dir" -type f \
        ! -path "*/node_modules/*" \
        ! -path "*/dist/*" \
        ! -path "*/build/*" \
        ! -path "*/.next/*" \
        ! -path "*/.turbo/*" \
        ! -path "*/.pytest_cache/*" \
        ! -path "*/__pycache__/*" \
        ! -path "*/.venv/*" \
        ! -path "*/venv/*" \
        ! -path "*/env/*" \
        ! -path "*/.bundle/*" \
        ! -path "*/.yardoc/*" \
        ! -path "*/log/*" \
        ! -path "*/tmp/*" \
        ! -name "*.pyc" \
        ! -name "*.pyo" \
        ! -name "*.rbc" \
        ! -name "*.o" \
        ! -name "*.obj" \
        ! -name "*.so" \
        ! -name "*.dll" \
        ! -name "*.tsbuildinfo" \
        ! -name "*.log" \
        ! -name "*.sqlite3" \
        ! -name "Gemfile.lock" \
        ! -name "go.sum" \
        | sort | while read -r file; do
            echo "=== $file ==="
            cat "$file"
            echo
        done
}

# Process all files in the directory
process_files "$directory"

